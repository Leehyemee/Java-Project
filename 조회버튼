// "조회" 버튼 클릭 이벤트
        Add_BT_1.addActionListener(e -> {
            String sql = "SELECT t.TRAIN_NUM, t.TRAIN_TYPE, t.STR_STATION, t.ARR_STATION, " +
                         "s.START_DAY, s.ARRIVE_DAY, s.MONEY, s.ECONOMY_SEAT, s.BABY_SEAT, s.STAND_SEAT, s. SCHEDULE_NUM " +
                         "FROM train t JOIN schedule s ON t.TRAIN_NUM = s.TRAIN_NUM"; // SQL 쿼리

            Connection conn = null;
            PreparedStatement pstmt = null;
            ResultSet rs = null;

            try {
                conn = connect(); // DB 연결
                pstmt = conn.prepareStatement(sql);
                rs = pstmt.executeQuery();

                // 테이블 모델 초기화
                model.setRowCount(0);

                // 조회 결과를 테이블에 추가
                while (rs.next()) {
                    String trainNum = rs.getString("TRAIN_NUM");
                    String trainType = rs.getString("TRAIN_TYPE");
                    String strStation = rs.getString("STR_STATION");
                    String arrStation = rs.getString("ARR_STATION");
                    String startDay = rs.getString("START_DAY");
                    String arriveDay = rs.getString("ARRIVE_DAY");
                    int money = rs.getInt("MONEY");
                    int economySeat = rs.getInt("ECONOMY_SEAT");
                    int babySeat = rs.getInt("BABY_SEAT");
                    String standSeat = rs.getString("STAND_SEAT");
                    //int sechedulenum = rs.getInt("SCHEDULE_NUM");

                    model.addRow(new Object[]{trainNum, trainType, strStation, arrStation, startDay, arriveDay, money, economySeat, babySeat, standSeat});
                }

                // 조회 완료 메시지
                //JOptionPane.showMessageDialog(this, "조회 완료.");
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "DB 연결 실패.");
            } finally {
                closeConnection(conn); // DB 연결 종료
            }
        });
